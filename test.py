from flask import Flask, render_template, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
import random
import uuid

app = Flask(__name__)
app.secret_key = 'your_secret_key'

# Configure SQLite database
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///quiz.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# Models
class Question(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    question = db.Column(db.Text, nullable=False)
    options = db.Column(db.PickleType, nullable=False)  # Stores options as a list
    answer = db.Column(db.String(50), nullable=False)

class UserAnswer(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    session_id = db.Column(db.String(100), nullable=False)
    question_id = db.Column(db.Integer, nullable=False)
    selected_option = db.Column(db.String(50))

# Initialize database
def initialize_db():
    with app.app_context():
        db.create_all()
        if not Question.query.first():
            seed_questions()

def seed_questions():
    question_data = [
        {"question": "What is the output of the following code: print(2 ** 3)?", "options": ["6", "8", "9", "16"], "answer": "8"},
        {"question": "Which of the following is used to define a function in Python?", "options": ["def", "function", "func", "define"], "answer": "def"},
        {"question": "What will the following code print: print('Python'[::-1])?", "options": ["nohtyP", "Python", "TypeError", "SyntaxError"], "answer": "nohtyP"},
        {"question": "Which method is used to add an element to the end of a list in Python?", "options": ["add()", "append()", "insert()", "extend()"], "answer": "append()"},
        {"question": "What is the result of 5 % 2 in Python?", "options": ["1", "2", "0", "5"], "answer": "1"},
        {"question": "Which keyword is used to create a class in Python?", "options": ["class", "object", "define", "struct"], "answer": "class"},
        {"question": "What will the following code output: print(type([]))?", "options": ["<class 'list'>", "<class 'tuple'>", "<class 'dict'>", "<class 'set'>"], "answer": "<class 'list'>"},
        {"question": "What is the correct way to check if a key exists in a dictionary?", "options": ["key in dict", "key exists dict", "dict.has_key(key)", "key is in dict"], "answer": "key in dict"},
        {"question": "Which of the following is a keyword in Python?", "options": ["finally", "exception", "trycatch", "throw"], "answer": "finally"},
        {"question": "What is the output of: print(bool(0))?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "How do you start a for loop in Python?", "options": ["for i in range:", "for i in range()", "for i = range()", "for (i in range)"], "answer": "for i in range:"},
        {"question": "What will the following code output: print('a' + 'b' * 2)?", "options": ["aabb", "abb", "ab", "aabbab"], "answer": "abb"},
        {"question": "Which function is used to find the length of a string in Python?", "options": ["len()", "length()", "str_len()", "strlen()"], "answer": "len()"},
        {"question": "How do you create an empty set in Python?", "options": ["{}", "set()", "[]", "empty()"], "answer": "set()"},
        {"question": "Which of the following is not a Python data type?", "options": ["list", "integer", "boolean", "character"], "answer": "character"},
        {"question": "What is the correct syntax to create a function that takes no arguments?", "options": ["def myFunc:", "def myFunc():", "function myFunc()", "def myFunc[]"], "answer": "def myFunc():"},
        {"question": "What is the purpose of the 'pass' statement in Python?", "options": ["To exit a loop", "To do nothing", "To raise an error", "To skip a loop iteration"], "answer": "To do nothing"},
        {"question": "Which of these is a valid Python variable name?", "options": ["2name", "_name", "name$", "name@1"], "answer": "_name"},
        {"question": "What is the output of: print([1, 2, 3] + [4, 5])?", "options": ["[1, 2, 3, 4, 5]", "[1, 2, 3] + [4, 5]", "[4, 5, 1, 2, 3]", "[1, 2, 3, 5]"], "answer": "[1, 2, 3, 4, 5]"},
        {"question": "How do you raise an exception in Python?", "options": ["throw Exception", "raise Exception", "exception()", "error.raise"], "answer": "raise Exception"},
        {"question": "What will be the output of: print('Python'.upper())?", "options": ["PYTHON", "Python", "python", "Error"], "answer": "PYTHON"},
        {"question": "Which method is used to remove all items from a list?", "options": ["clear()", "delete()", "removeAll()", "popAll()"], "answer": "clear()"},
        {"question": "How do you check the type of a variable in Python?", "options": ["type(variable)", "typeof(variable)", "variable.type", "isType(variable)"], "answer": "type(variable)"},
        {"question": "Which operator is used for floor division in Python?", "options": ["//", "/", "%", "**"], "answer": "//"},
        {"question": "Which of these is not a Python operator?", "options": ["+", "-", "&", "?:"], "answer": "?:"},
        {"question": "What will the following code print: print([1, 2, 3][2])?", "options": ["1", "2", "3", "IndexError"], "answer": "3"},
        {"question": "How do you create a dictionary in Python?", "options": ["{}", "[]", "dict()", "both {} and dict()"], "answer": "both {} and dict()"},
        {"question": "What is the output of: print('Python'.startswith('Py'))?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "What is the result of 10 == 10.0 in Python?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "How do you access the first element of a tuple?", "options": ["tuple[0]", "tuple.get(0)", "tuple(0)", "tuple.first"], "answer": "tuple[0]"},
        {"question": "Which method is used to find an index of a value in a list?", "options": ["index()", "find()", "search()", "locate()"], "answer": "index()"},
        {"question": "What will the following code print: print('Python'.find('o'))?", "options": ["4", "3", "-1", "Error"], "answer": "4"},
        {"question": "Which keyword is used to handle exceptions in Python?", "options": ["except", "catch", "try", "finally"], "answer": "except"},
        {"question": "How do you open a file for writing in Python?", "options": ["open('file.txt', 'w')", "open('file.txt', 'write')", "write('file.txt')", "file.open('w')"], "answer": "open('file.txt', 'w')"},
        {"question": "What is the result of 4 ** 0.5 in Python?", "options": ["2", "2.0", "0", "Error"], "answer": "2.0"},
        {"question": "Which keyword is used to define a generator in Python?", "options": ["yield", "return", "generate", "def"], "answer": "yield"},
        {"question": "What will the following code output: print({1, 2, 2, 3})?", "options": ["{1, 2, 3}", "{1, 2, 2, 3}", "[1, 2, 3]", "Error"], "answer": "{1, 2, 3}"},
        {"question": "How do you create a tuple with one element in Python?", "options": ["(1)", "(1,)", "[1]", "tuple(1)"], "answer": "(1,)"},
        {"question": "What is the correct way to write an infinite loop in Python?", "options": ["while True:", "while (1):", "while true:", "for i in range():"], "answer": "while True:"},
        {"question": "Which of the following is not a Python keyword?", "options": ["lambda", "assert", "nonlocal", "include"], "answer": "include"},
        {"question": "What does the following code output: print('abc' * 2)?", "options": ["abcabc", "abc", "2abc", "Error"], "answer": "abcabc"},
        {"question": "What will be the output of: print(bool([]))?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "Which of the following is not a valid list method in Python?", "options": ["remove()", "sort()", "pop()", "push()"], "answer": "push()"},
        {"question": "How do you remove a key-value pair from a dictionary?", "options": ["del dict[key]", "dict.pop(key)", "dict.remove(key)", "Both del and pop"], "answer": "Both del and pop"},
        {"question": "Which of the following can be used as a dictionary key?", "options": ["list", "string", "set", "None"], "answer": "string"},
        {"question": "What is the purpose of the 'is' operator in Python?", "options": ["To compare values", "To compare memory locations", "To check type", "To perform logical operations"], "answer": "To compare memory locations"},
        {"question": "What will the following code output: print({1, 2} | {2, 3})?", "options": ["{1, 2, 3}", "{1, 2}", "{2}", "Error"], "answer": "{1, 2, 3}"},
        {"question": "Which of the following is an immutable data type?", "options": ["list", "set", "tuple", "dictionary"], "answer": "tuple"},
        {"question": "What does 'strip()' do to a string?", "options": ["Removes whitespace from both ends", "Removes all spaces", "Removes leading spaces", "Removes trailing spaces"], "answer": "Removes whitespace from both ends"},
        {"question": "Which Python library is used for numerical computations?", "options": ["numpy", "pandas", "matplotlib", "scipy"], "answer": "numpy"},
        {"question": "What is the output of: print(1 < 2 and 2 < 3)?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "How do you create a new set with elements that are only in both sets?", "options": ["set1 & set2", "set1.intersection(set2)", "Both", "Neither"], "answer": "Both"},
        {"question": "Which function is used to read a file line by line?", "options": ["readlines()", "readline()", "read()", "filelines()"], "answer": "readlines()"},
        {"question": "What is the correct way to install a Python package?", "options": ["pip install package_name", "install package_name", "python install package_name", "setup package_name"], "answer": "pip install package_name"},
        {"question": "What does 'elif' stand for in Python?", "options": ["else if", "else", "if", "Error"], "answer": "else if"},
        {"question": "How do you convert a string to an integer in Python?", "options": ["int(string)", "float(string)", "str(string)", "int.convert(string)"], "answer": "int(string)"},
        {"question": "What does 'continue' do in a loop?", "options": ["Skips to the next iteration", "Terminates the loop", "Pauses the loop", "Restarts the loop"], "answer": "Skips to the next iteration"},
        {"question": "What will the following code output: print('10'.isdigit())?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "What is the result of len({'a': 1, 'b': 2})?", "options": ["2", "1", "3", "Error"], "answer": "2"},
        {"question": "Which Python statement is used to create a new exception?", "options": ["raise", "throw", "except", "try"], "answer": "raise"},
        {"question": "What does 'range(5)' produce in Python 3?", "options": ["[0, 1, 2, 3, 4]", "range(0, 5)", "[1, 2, 3, 4, 5]", "Error"], "answer": "range(0, 5)"},
        {"question": "How do you reverse a list in Python?", "options": ["list.reverse()", "list[::-1]", "reversed(list)", "All of the above"], "answer": "All of the above"},
        {"question": "What is the correct way to check if a file exists?", "options": ["os.path.exists('file')", "file.exists()", "exists('file')", "check_file('file')"], "answer": "os.path.exists('file')"},
        {"question": "What will the following code output: print(sum([1, 2, 3]))?", "options": ["6", "123", "[1, 2, 3]", "Error"], "answer": "6"},
        {"question": "What will the following code print: print('hello'.capitalize())?", "options": ["Hello", "HELLO", "hello", "Error"], "answer": "Hello"},
        {"question": "Which module is used to work with dates and times in Python?", "options": ["datetime", "time", "calendar", "All of the above"], "answer": "datetime"},
        {"question": "What is the purpose of the 'with' statement in Python?", "options": ["To simplify exception handling", "To manage resources", "To replace try/finally", "All of the above"], "answer": "All of the above"},
        {"question": "Which of the following is not a built-in function in Python?", "options": ["zip()", "map()", "reduce()", "combine()"], "answer": "combine()"},
        {"question": "How do you calculate the square root of a number?", "options": ["math.sqrt(x)", "sqrt(x)", "x ** 0.5", "Both math.sqrt(x) and x ** 0.5"], "answer": "Both math.sqrt(x) and x ** 0.5"},
        {"question": "What is the output of the following code: print(2 ** 3)?", "options": ["6", "8", "9", "16"], "answer": "8"},
        {"question": "Which of the following is used to define a function in Python?", "options": ["def", "function", "func", "define"], "answer": "def"},
        {"question": "What will the following code print: print('Python'[::-1])?", "options": ["nohtyP", "Python", "TypeError", "SyntaxError"], "answer": "nohtyP"},
        {"question": "Which method is used to add an element to the end of a list in Python?", "options": ["add()", "append()", "insert()", "extend()"], "answer": "append()"},
        {"question": "What is the correct syntax for importing the math module in Python?", "options": ["import math", "import math()", "from math import *", "include math"], "answer": "import math"},
        {"question": "How do you declare a variable in Python?", "options": ["var x = 10", "x = 10", "let x = 10", "declare x = 10"], "answer": "x = 10"},
        {"question": "Which of the following is a mutable data type in Python?", "options": ["list", "string", "tuple", "int"], "answer": "list"},
        {"question": "What will be the output of the following code: print(10 // 3)?", "options": ["3", "3.33", "10", "Error"], "answer": "3"},
        {"question": "How do you write a comment in Python?", "options": ["// comment", "/* comment */", "# comment", "/* comment"], "answer": "# comment"},
        {"question": "What does the 'break' statement do in a loop?", "options": ["Terminates the loop", "Skips the current iteration", "Pauses the loop", "None of the above"], "answer": "Terminates the loop"},
        {"question": "What is the output of: print(5 % 2)?", "options": ["1", "2", "0", "Error"], "answer": "1"},
        {"question": "Which function is used to find the length of a list?", "options": ["len()", "size()", "count()", "length()"], "answer": "len()"},
        {"question": "How do you merge two dictionaries in Python 3.9+?", "options": ["dict1 | dict2", "dict1.update(dict2)", "Both", "Neither"], "answer": "Both"},
        {"question": "What is the default encoding for text files in Python?", "options": ["UTF-8", "ASCII", "ISO-8859-1", "None"], "answer": "UTF-8"},
        {"question": "Which of the following is not an escape character in Python?", "options": ["\\n", "\\t", "\\a", "\\z"], "answer": "\\z"},
        {"question": "What is the output of: print(10 == 10.0)?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "Which function is used to sort a list in ascending order?", "options": ["sort()", "sorted()", "order()", "arrange()"], "answer": "sorted()"},
        {"question": "What does the 'finally' block do in Python?", "options": ["Executes code after try/except", "Handles exceptions", "Skips errors", "None of the above"], "answer": "Executes code after try/except"},
        {"question": "What will be the output of: print(type(5/2))?", "options": ["<class 'int'>", "<class 'float'>", "<class 'double'>", "Error"], "answer": "<class 'float'>"},
        {"question": "How do you check the type of a variable in Python?", "options": ["type(var)", "isinstance(var)", "var.type()", "Both type(var) and isinstance(var)"], "answer": "Both type(var) and isinstance(var)"},
        {"question": "Which of the following is not a valid way to create a set in Python?", "options": ["{1, 2, 3}", "set([1, 2, 3])", "set(1, 2, 3)", "None of the above"], "answer": "set(1, 2, 3)"},
        {"question": "What is the result of: print(list('abc'))?", "options": ["['a', 'b', 'c']", "abc", "Error", "['abc']"], "answer": "['a', 'b', 'c']"},
        {"question": "Which operator is used for matrix multiplication in Python?", "options": ["@", "*", ".", "None of the above"], "answer": "@"},
        {"question": "What is the output of: print(abs(-10))?", "options": ["10", "-10", "0", "Error"], "answer": "10"},
        {"question": "What does 'open('file.txt', 'w')' do?", "options": ["Opens file for writing", "Reads file", "Appends to file", "None of the above"], "answer": "Opens file for writing"},
        {"question": "What will be the output of: print(2 == 2 and 2 > 3)?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "Which function is used to return the largest item in a list?", "options": ["max()", "largest()", "greatest()", "biggest()"], "answer": "max()"},
        {"question": "What will the following code output: print('A'.lower())?", "options": ["a", "A", "Error", "None"], "answer": "a"},
        {"question": "What is the output of: print(ord('A'))?", "options": ["65", "97", "1", "Error"], "answer": "65"},
        {"question": "Which of the following is a valid variable name?", "options": ["_var", "1var", "var-name", "None of the above"], "answer": "_var"},
        {"question": "What does the function eval() do in Python?", "options": ["Executes a string as code", "Evaluates a condition", "Returns a boolean", "None of the above"], "answer": "Executes a string as code"},
        {"question": "What is the result of: print(round(3.14159, 2))?", "options": ["3.14", "3.141", "3.15", "Error"], "answer": "3.14"},
        {"question": "Which of the following data types is not iterable?", "options": ["list", "int", "tuple", "string"], "answer": "int"},
        {"question": "What will the following code output: print(bin(10))?", "options": ["0b1010", "1010", "0x10", "Error"], "answer": "0b1010"},
        {"question": "What will the following code output: print(10 > 5 or 5 > 10)?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "What does 'isinstance(x, int)' check?", "options": ["If x is an integer", "If x is a string", "If x is a float", "None of the above"], "answer": "If x is an integer"},
        {"question": "What is the output of: print(all([True, False, True]))?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "What will be the output of: print(len('Python'))?", "options": ["6", "5", "7", "Error"], "answer": "6"},
        {"question": "Which keyword is used to handle exceptions in Python?", "options": ["except", "catch", "error", "finally"], "answer": "except"},
        {"question": "What does the function zip() do?", "options": ["Combines iterables", "Sorts lists", "Merges dictionaries", "None of the above"], "answer": "Combines iterables"},
        {"question": "What is the output of: print(not True)?", "options": ["False", "True", "None", "Error"], "answer": "False"},
        {"question": "Which module is used to generate random numbers?", "options": ["random", "math", "os", "sys"], "answer": "random"},
        {"question": "How do you check if a substring exists in a string?", "options": ["'sub' in 'string'", "string.find('sub')", "Both", "None"], "answer": "Both"},
        {"question": "What is the output of: print(len(set([1, 1, 2, 3])))?", "options": ["3", "4", "5", "Error"], "answer": "3"},
        {"question": "What is the result of: print(10 / 3)?", "options": ["3.33", "3", "3.0", "Error"], "answer": "3.3333333333333335"},
        {"question": "Which method is used to check if a string starts with a specific prefix?", "options": ["startswith()", "start()", "isstart()", "startswithprefix()"], "answer": "startswith()"},
        {"question": "What will the following code output: print('Python'.find('y'))?", "options": ["1", "2", "-1", "Error"], "answer": "1"},
        {"question": "Which operator is used for exponentiation?", "options": ["**", "^", "*", "pow"], "answer": "**"},
        {"question": "What is the output of: print(int('10') + 1)?", "options": ["11", "101", "Error", "10"], "answer": "11"},
        {"question": "What is the purpose of the pass statement?", "options": ["Acts as a placeholder", "Skips a block", "Terminates a loop", "None"], "answer": "Acts as a placeholder"},
        {"question": "What is the output of: print(range(5)[-1])?", "options": ["4", "5", "-1", "Error"], "answer": "4"},
        {"question": "Which function returns the ASCII value of a character?", "options": ["ord()", "chr()", "ascii()", "char()"], "answer": "ord()"},
        {"question": "Which keyword is used to create an anonymous function in Python?", "options": ["lambda", "def", "func", "None"], "answer": "lambda"},
        {"question": "What will the following code output: print(bool([]))?", "options": ["True", "False", "Error", "None"], "answer": "False"},
        {"question": "Which method is used to remove a key-value pair from a dictionary?", "options": ["pop()", "remove()", "del()", "discard()"], "answer": "pop()"},
        {"question": "What is the output of: print(0.1 + 0.2 == 0.3)?", "options": ["True", "False", "Error", "None"], "answer": "False"},
        {"question": "Which Python library is commonly used for data analysis?", "options": ["pandas", "numpy", "matplotlib", "scipy"], "answer": "pandas"},
        {"question": "What will be the output of: print([1, 2] + [3, 4])?", "options": ["[1, 2, 3, 4]", "[1, 2][3, 4]", "Error", "None"], "answer": "[1, 2, 3, 4]"},
        {"question": "Which keyword is used to create a generator function?", "options": ["yield", "return", "generate", "produce"], "answer": "yield"},
        {"question": "What is the result of: print({1, 2, 3} & {2, 3, 4})?", "options": ["{2, 3}", "{1, 4}", "{1, 2, 3, 4}", "Error"], "answer": "{2, 3}"},
        {"question": "Which function is used to create a new list by applying a function to each element of another list?", "options": ["map()", "filter()", "reduce()", "apply()"], "answer": "map()"},
        {"question": "What will the following code output: print(' '.join(['Hello', 'World']))?", "options": ["Hello World", "HelloWorld", "['Hello', 'World']", "Error"], "answer": "Hello World"},
        {"question": "What is the purpose of the zipfile module?", "options": ["Work with ZIP files", "Compress text files", "Encrypt files", "None"], "answer": "Work with ZIP files"},
        {"question": "What is the output of: print({i: i**2 for i in range(3)})?", "options": ["{0: 0, 1: 1, 2: 4}", "{1: 1, 2: 4, 3: 9}", "{1: 0, 2: 1, 3: 4}", "Error"], "answer": "{0: 0, 1: 1, 2: 4}"},
        {"question": "What will the following code output: print([x for x in range(5) if x % 2 == 0])?", "options": ["[0, 2, 4]", "[1, 3, 5]", "[0, 1, 2, 3, 4]", "Error"], "answer": "[0, 2, 4]"},
        {"question": "What does the functools.reduce() function do?", "options": ["Applies a function cumulatively", "Filters elements", "Maps elements", "None"], "answer": "Applies a function cumulatively"},
        {"question": "What is the output of: print(len({'a': 1, 'b': 2, 'c': 3}))?", "options": ["3", "2", "1", "Error"], "answer": "3"},
        {"question": "What will the following code output: print('abc'.isalpha())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which function returns a reversed iterator?", "options": ["reversed()", "reverse()", "invert()", "None"], "answer": "reversed()"},
        {"question": "What is the output of: print(float('inf') > 1e308)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method can be used to convert a string to lowercase?", "options": ["lower()", "casefold()", "Both", "None"], "answer": "Both"},
        {"question": "What will the following code output: print(len(set('hello')))?", "options": ["4", "5", "6", "Error"], "answer": "4"},
        {"question": "Which function converts an iterable to a tuple?", "options": ["tuple()", "set()", "list()", "dict()"], "answer": "tuple()"},
        {"question": "What does the term 'PEP' stand for in Python?", "options": ["Python Enhancement Proposal", "Python Execution Protocol", "Program Execution Plan", "None"], "answer": "Python Enhancement Proposal"},
        {"question": "What is the output of: print([*range(3)])?", "options": ["[0, 1, 2]", "range(3)", "[1, 2, 3]", "Error"], "answer": "[0, 1, 2]"},
        {"question": "Which method is used to check if a key exists in a dictionary?", "options": ["in", "has_key()", "check()", "None"], "answer": "in"},
        {"question": "What is the result of: print(all([]))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is a valid f-string syntax?", "options": ["f'{var}'", "f'var'", "f('var')", "None"], "answer": "f'{var}'"},
        {"question": "What is the result of: print(bool(0))?", "options": ["False", "True", "Error", "None"], "answer": "False"},
        {"question": "What will the following code output: print({1, 2, 3} - {2, 3})?", "options": ["{1}", "{2, 3}", "set()", "Error"], "answer": "{1}"},
        {"question": "What does the str.zfill() method do?", "options": ["Pads with zeros", "Fills a string", "Splits a string", "None"], "answer": "Pads with zeros"},
        {"question": "What will the following code output: print([10, 20, 30][1])?", "options": ["20", "10", "30", "Error"], "answer": "20"},
        {"question": "Which of the following is a Python framework for web development?", "options": ["Django", "Flask", "Both", "None"], "answer": "Both"},
        {"question": "What is the output of: print('Python'.endswith('n'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "What will the following code output: print(sorted([3, 1, 2]))?", "options": ["[1, 2, 3]", "[3, 2, 1]", "[1, 3, 2]", "Error"], "answer": "[1, 2, 3]"},
        {"question": "Which method is used to split a string into a list?", "options": ["split()", "divide()", "partition()", "None"], "answer": "split()"},
        {"question": "What does 'assert' do in Python?", "options": ["Checks a condition", "Stops execution", "Executes a block", "None"], "answer": "Checks a condition"},
        {"question": "What will the following code output: print(hex(255))?", "options": ["0xff", "255", "0x255", "Error"], "answer": "0xff"},
        {"question": "Which module is used for file and directory manipulation?", "options": ["os", "sys", "shutil", "path"], "answer": "os"},
        {"question": "What will the following code output: print(divmod(10, 3))?", "options": ["(3, 1)", "(3, 2)", "(10, 3)", "Error"], "answer": "(3, 1)"},
        {"question": "Which keyword is used to make a class inherit another class?", "options": ["class Child(Parent)", "extends", "inherits", "None"], "answer": "class Child(Parent)"},
        {"question": "What is the output of: print(bool(''))?", "options": ["False", "True", "Error", "None"], "answer": "False"},
        {"question": "What is the output of: print({1, 2, 2, 3})?", "options": ["{1, 2, 3}", "{1, 2, 2, 3}", "Error", "None"], "answer": "{1, 2, 3}"},
        {"question": "What will the following code output: print('abcd'.find('c'))?", "options": ["2", "1", "-1", "Error"], "answer": "2"},
        {"question": "Which of the following is an immutable data type in Python?", "options": ["tuple", "list", "set", "dict"], "answer": "tuple"},
        {"question": "What does the 'is' keyword compare?", "options": ["Identity", "Value", "Type", "Length"], "answer": "Identity"},
        {"question": "What will the following code output: print(round(7.5))?", "options": ["8", "7", "7.5", "Error"], "answer": "8"},
        {"question": "Which function can be used to shuffle a list in Python?", "options": ["shuffle()", "random()", "randint()", "None"], "answer": "shuffle()"},
        {"question": "What does the itertools.permutations() function do?", "options": ["Generates permutations", "Generates combinations", "Sorts lists", "None"], "answer": "Generates permutations"},
        {"question": "What will the following code output: print(ord('A'))?", "options": ["65", "97", "66", "Error"], "answer": "65"},
        {"question": "Which operator is used for floor division?", "options": ["//", "/", "%", "None"], "answer": "//"},
        {"question": "What is the output of: print(list(reversed([1, 2, 3])))?", "options": ["[3, 2, 1]", "[1, 2, 3]", "[2, 3, 1]", "Error"], "answer": "[3, 2, 1]"},
        {"question": "Which function returns the ASCII character for an integer?", "options": ["chr()", "ord()", "ascii()", "None"], "answer": "chr()"},
        {"question": "What is the result of: print(type({}))?", "options": ["<class 'dict'>", "<class 'set'>", "<class 'list'>", "Error"], "answer": "<class 'dict'>"},
        {"question": "What is the output of: print([1, 2] * 2)?", "options": ["[1, 2, 1, 2]", "[1, 2]", "[2, 4]", "Error"], "answer": "[1, 2, 1, 2]"},
        {"question": "What will the following code output: print(len('Python'))?", "options": ["6", "5", "7", "Error"], "answer": "6"},
        {"question": "Which keyword is used to handle exceptions in Python?", "options": ["try", "catch", "handle", "None"], "answer": "try"},
        {"question": "What is the output of: print(sum([1, 2, 3]))?", "options": ["6", "5", "Error", "None"], "answer": "6"},
        {"question": "Which module is used to work with regular expressions in Python?", "options": ["re", "regex", "match", "None"], "answer": "re"},
        {"question": "What will the following code output: print(max([1, 5, 3]))?", "options": ["5", "3", "1", "Error"], "answer": "5"},
        {"question": "What is the output of: print(bin(10))?", "options": ["0b1010", "10", "0x10", "Error"], "answer": "0b1010"},
        {"question": "Which of the following is a Python keyword?", "options": ["lambda", "def", "global", "All of the above"], "answer": "All of the above"},
        {"question": "What will the following code output: print(str(123))?", "options": ["'123'", "123", "Error", "None"], "answer": "'123'"},
        {"question": "Which function can be used to read a line from a file?", "options": ["readline()", "readlines()", "read()", "None"], "answer": "readline()"},
        {"question": "What is the purpose of the id() function?", "options": ["Returns the memory address", "Returns the type", "Returns the value", "None"], "answer": "Returns the memory address"},
        {"question": "What is the output of: print(bool('False'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method is used to replace a substring in Python?", "options": ["replace()", "sub()", "update()", "None"], "answer": "replace()"},
        {"question": "What will the following code output: print(set([1, 2, 2, 3]))?", "options": ["{1, 2, 3}", "{1, 2, 2, 3}", "Error", "None"], "answer": "{1, 2, 3}"},
        {"question": "What is the result of: print(' '.isspace())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method is used to capitalize the first letter of a string?", "options": ["capitalize()", "title()", "upper()", "None"], "answer": "capitalize()"},
        {"question": "What will the following code output: print(5 in range(1, 6))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which module is used to generate random numbers?", "options": ["random", "math", "os", "None"], "answer": "random"},
        {"question": "What is the output of: print(3 ** 2)?", "options": ["9", "6", "8", "Error"], "answer": "9"},
        {"question": "What is the purpose of the continue statement in a loop?", "options": ["Skips the current iteration", "Terminates the loop", "Pauses the loop", "None"], "answer": "Skips the current iteration"},
        {"question": "Which function is used to get the length of a list?", "options": ["len()", "size()", "count()", "None"], "answer": "len()"},
        {"question": "What is the result of: print(abs(-10))?", "options": ["10", "-10", "Error", "None"], "answer": "10"},
        {"question": "Which method is used to check if all elements in an iterable are true?", "options": ["all()", "any()", "check()", "None"], "answer": "all()"},
        {"question": "What is the output of: print(10 % 3)?", "options": ["1", "3", "10", "Error"], "answer": "1"},
        {"question": "Which method can be used to convert a string to uppercase?", "options": ["upper()", "capitalize()", "lower()", "None"], "answer": "upper()"},
        {"question": "What will the following code output: print({i: i*2 for i in range(3)})?", "options": ["{0: 0, 1: 2, 2: 4}", "{0: 0, 1: 1, 2: 2}", "{1: 2, 2: 4, 3: 6}", "Error"], "answer": "{0: 0, 1: 2, 2: 4}"},
        {"question": "Which keyword is used to define an anonymous function?", "options": ["lambda", "def", "anonymous", "None"], "answer": "lambda"},
        {"question": "What is the output of: print([1, 2, 3] == [1, 2, 3])?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following functions can be used to get the first element of a list?", "options": ["first()", "head()", "list[0]", "None"], "answer": "list[0]"},
        {"question": "What is the result of: print('hello'.upper())?", "options": ["'HELLO'", "'hello'", "Error", "None"], "answer": "'HELLO'"},
        {"question": "Which function is used to sort a list in Python?", "options": ["sort()", "ordered()", "sorted()", "None"], "answer": "sort()"},
        {"question": "What will be the result of: print(len({1, 2, 3}))?", "options": ["3", "2", "1", "Error"], "answer": "3"},
        {"question": "Which method is used to remove an element from a set?", "options": ["remove()", "discard()", "pop()", "All of the above"], "answer": "All of the above"},
        {"question": "What does the 'continue' statement do in a loop?", "options": ["Terminates the loop", "Skips the current iteration", "Pauses the loop", "None of the above"], "answer": "Skips the current iteration"},
        {"question": "Which of the following is a built-in Python data type?", "options": ["set", "dict", "list", "All of the above"], "answer": "All of the above"},
        {"question": "What is the output of: print('Python'.lower())?", "options": ["'python'", "'Python'", "Error", "None"], "answer": "'python'"},
        {"question": "Which function is used to generate a random number between 0 and 1?", "options": ["rand()", "random()", "randint()", "random.random()"], "answer": "random.random()"},
        {"question": "What will the following code output: print(5 ** 2)?", "options": ["25", "5", "10", "Error"], "answer": "25"},
        {"question": "What is the result of: print(1 == 1.0)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which operator is used for exponentiation?", "options": ["^", "**", "//", "%"], "answer": "**"},
        {"question": "What is the output of: print(10 and 5)?", "options": ["5", "10", "True", "Error"], "answer": "5"},
        {"question": "What is the output of: print([1, 2] + [3, 4])?", "options": ["[1, 2, 3, 4]", "[4, 3, 2, 1]", "[1, 2, 3]", "Error"], "answer": "[1, 2, 3, 4]"},
        {"question": "Which function can be used to get the absolute value of a number?", "options": ["abs()", "value()", "absolute()", "None"], "answer": "abs()"},
        {"question": "What is the purpose of the 'assert' statement?", "options": ["Used for debugging", "Checks if a condition is true", "Executes code if true", "None"], "answer": "Checks if a condition is true"},
        {"question": "Which function is used to get the type of an object?", "options": ["type()", "object()", "class()", "None"], "answer": "type()"},
        {"question": "Which of the following is a method of the list object?", "options": ["add()", "insert()", "append()", "All of the above"], "answer": "append()"},
        {"question": "What is the result of: print('abc'.replace('b', 'z'))?", "options": ["'azc'", "'abc'", "'ac'", "Error"], "answer": "'azc'"},
        {"question": "Which function is used to combine two lists in Python?", "options": ["combine()", "merge()", "extend()", "append()"], "answer": "extend()"},
        {"question": "What will the following code output: print(len('Python' + ' Programming'))?", "options": ["18", "16", "14", "Error"], "answer": "18"},
        {"question": "Which function is used to count the occurrences of a substring in a string?", "options": ["count()", "find()", "index()", "None"], "answer": "count()"},
        {"question": "What is the output of: print('   hello   '.strip())?", "options": ["'hello'", "'hello   '", "'   hello'", "Error"], "answer": "'hello'"},
        {"question": "Which Python function can be used to get a random element from a list?", "options": ["random()", "randint()", "choice()", "random.choice()"], "answer": "random.choice()"},
        {"question": "Which function can be used to remove a key from a dictionary?", "options": ["delete()", "pop()", "remove()", "clear()"], "answer": "pop()"},
        {"question": "What will be the output of: print(2 ** 3 ** 2)?", "options": ["512", "64", "16", "Error"], "answer": "512"},
        {"question": "Which of the following methods can be used to add an element to a dictionary?", "options": ["add()", "append()", "insert()", "update()"], "answer": "update()"},
        {"question": "What is the result of: print('abc'.find('b'))?", "options": ["1", "-1", "0", "Error"], "answer": "1"},
        {"question": "What is the output of: print(list(range(1, 6)))?", "options": ["[1, 2, 3, 4, 5]", "[1, 2, 3, 4]", "[0, 1, 2, 3, 4]", "Error"], "answer": "[1, 2, 3, 4, 5]"},
        {"question": "Which of the following can be used to check if a key exists in a dictionary?", "options": ["in", "has_key()", "exists()", "None"], "answer": "in"},
        {"question": "What will the following code output: print('Hello' * 3)?", "options": ["HelloHelloHello", "Hello 3", "Error", "None"], "answer": "HelloHelloHello"},
        {"question": "What is the purpose of the 'else' clause in a loop?", "options": ["Executes when the loop finishes", "Executes when the loop starts", "Executes after an exception", "None"], "answer": "Executes when the loop finishes"},
        {"question": "Which function can be used to create a list from an iterable?", "options": ["list()", "array()", "to_list()", "None"], "answer": "list()"},
        {"question": "What is the result of: print('a' == 'A')?", "options": ["False", "True", "None", "Error"], "answer": "False"},
        {"question": "What will the following code output: print(10 / 2)?", "options": ["5", "2", "10", "Error"], "answer": "5"},
        {"question": "Which function is used to merge two dictionaries in Python?", "options": ["merge()", "combine()", "update()", "extend()"], "answer": "update()"},
        {"question": "Which of the following is used to create a new instance of a class in Python?", "options": ["new()", "class()", "constructor()", "None"], "answer": "None"},
        {"question": "What is the output of: print(0 == False)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is not a valid Python data type?", "options": ["int", "str", "float", "char"], "answer": "char"},
        {"question": "What is the result of: print(2 * 3 + 5)?", "options": ["11", "13", "9", "7"], "answer": "11"},
        {"question": "Which operator is used to concatenate two strings?", "options": ["&", "+", "=", "*"], "answer": "+"},
        {"question": "What is the output of: print('Python'.startswith('P'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is a Python keyword?", "options": ["null", "try", "none", "true"], "answer": "try"},
        {"question": "What is the purpose of the 'finally' clause in Python?", "options": ["It always executes after the try block", "It executes only if an exception is raised", "It executes if no exception is raised", "None"], "answer": "It always executes after the try block"},
        {"question": "What is the result of: print(10 % 3)?", "options": ["3", "1", "2", "None"], "answer": "1"},
        {"question": "Which method is used to convert a string to a list of characters?", "options": ["split()", "list()", "char()", "None"], "answer": "list()"},
        {"question": "What is the correct way to handle exceptions in Python?", "options": ["try-except", "catch-throw", "try-catch", "None"], "answer": "try-except"},
        {"question": "Which function is used to convert a string to lowercase?", "options": ["lower()", "convert()", "case()", "down()"], "answer": "lower()"},
        {"question": "What is the result of: print(len('hello world'))?", "options": ["11", "10", "12", "None"], "answer": "11"},
        {"question": "What will the following code output: print([2, 4, 6] * 2)?", "options": ["[2, 4, 6, 2, 4, 6]", "[4, 8, 12]", "[2, 4, 6]", "None"], "answer": "[2, 4, 6, 2, 4, 6]"},
        {"question": "Which Python function is used to check if a number is even?", "options": ["is_even()", "even()", "mod(2)", "None"], "answer": "None"},
        {"question": "What is the output of: print(3 * 2 ** 2)?", "options": ["12", "9", "16", "None"], "answer": "12"},
        {"question": "Which of the following is used to define a class in Python?", "options": ["class", "object", "def", "None"], "answer": "class"},
        {"question": "Which operator is used for floor division in Python?", "options": ["/", "//", "%", "div"], "answer": "//"},
        {"question": "Which of the following methods is used to add an element at the beginning of a list?", "options": ["insert()", "append()", "extend()", "None"], "answer": "insert()"},
        {"question": "What is the result of: print('123'.isdigit())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which function can be used to convert a string to an integer?", "options": ["int()", "str()", "float()", "convert()"], "answer": "int()"},
        {"question": "What is the output of: print('ab' * 3)?", "options": ["'ababab'", "'ab'", "'aabbb'", "None"], "answer": "'ababab'"},
        {"question": "Which of the following can be used to iterate over a sequence in Python?", "options": ["for", "while", "both", "None"], "answer": "both"},
        {"question": "What is the purpose of the 'self' keyword in a Python class?", "options": ["Refers to the instance of the class", "Refers to the method", "Refers to the class itself", "None"], "answer": "Refers to the instance of the class"},
        {"question": "What is the purpose of the zipfile module?", "options": ["Work with ZIP files", "Compress text files", "Encrypt files", "None"], "answer": "Work with ZIP files"},
        {"question": "What is the output of: print({i: i**2 for i in range(3)})?", "options": ["{0: 0, 1: 1, 2: 4}", "{1: 1, 2: 4, 3: 9}", "{1: 0, 2: 1, 3: 4}", "Error"], "answer": "{0: 0, 1: 1, 2: 4}"},
        {"question": "What will the following code output: print([x for x in range(5) if x % 2 == 0])?", "options": ["[0, 2, 4]", "[1, 3, 5]", "[0, 1, 2, 3, 4]", "Error"], "answer": "[0, 2, 4]"},
        {"question": "What does the functools.reduce() function do?", "options": ["Applies a function cumulatively", "Filters elements", "Maps elements", "None"], "answer": "Applies a function cumulatively"},
        {"question": "What is the output of: print(len({'a': 1, 'b': 2, 'c': 3}))?", "options": ["3", "2", "1", "Error"], "answer": "3"},
        {"question": "What will the following code output: print('abc'.isalpha())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which function returns a reversed iterator?", "options": ["reversed()", "reverse()", "invert()", "None"], "answer": "reversed()"},
        {"question": "What is the output of: print(float('inf') > 1e308)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method can be used to convert a string to lowercase?", "options": ["lower()", "casefold()", "Both", "None"], "answer": "Both"},
        {"question": "What will the following code output: print(len(set('hello')))?", "options": ["4", "5", "6", "Error"], "answer": "4"},
        {"question": "Which function converts an iterable to a tuple?", "options": ["tuple()", "set()", "list()", "dict()"], "answer": "tuple()"},
        {"question": "What does the term 'PEP' stand for in Python?", "options": ["Python Enhancement Proposal", "Python Execution Protocol", "Program Execution Plan", "None"], "answer": "Python Enhancement Proposal"},
        {"question": "What is the output of: print([*range(3)])?", "options": ["[0, 1, 2]", "range(3)", "[1, 2, 3]", "Error"], "answer": "[0, 1, 2]"},
        {"question": "Which method is used to check if a key exists in a dictionary?", "options": ["in", "has_key()", "check()", "None"], "answer": "in"},
        {"question": "What is the result of: print(all([]))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is a valid f-string syntax?", "options": ["f'{var}'", "f'var'", "f('var')", "None"], "answer": "f'{var}'"},
        {"question": "What is the result of: print(bool(0))?", "options": ["False", "True", "Error", "None"], "answer": "False"},
        {"question": "What will the following code output: print({1, 2, 3} - {2, 3})?", "options": ["{1}", "{2, 3}", "set()", "Error"], "answer": "{1}"},
        {"question": "What does the str.zfill() method do?", "options": ["Pads with zeros", "Fills a string", "Splits a string", "None"], "answer": "Pads with zeros"},
        {"question": "What will the following code output: print([10, 20, 30][1])?", "options": ["20", "10", "30", "Error"], "answer": "20"},
        {"question": "Which of the following is a Python framework for web development?", "options": ["Django", "Flask", "Both", "None"], "answer": "Both"},
        {"question": "What is the output of: print('Python'.endswith('n'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "What will the following code output: print(sorted([3, 1, 2]))?", "options": ["[1, 2, 3]", "[3, 2, 1]", "[1, 3, 2]", "Error"], "answer": "[1, 2, 3]"},
        {"question": "Which method is used to split a string into a list?", "options": ["split()", "divide()", "partition()", "None"], "answer": "split()"},
        {"question": "What does 'assert' do in Python?", "options": ["Checks a condition", "Stops execution", "Executes a block", "None"], "answer": "Checks a condition"},
        {"question": "What will the following code output: print(hex(255))?", "options": ["0xff", "255", "0x255", "Error"], "answer": "0xff"},
        {"question": "Which module is used for file and directory manipulation?", "options": ["os", "sys", "shutil", "path"], "answer": "os"},
        {"question": "What will the following code output: print(divmod(10, 3))?", "options": ["(3, 1)", "(3, 2)", "(10, 3)", "Error"], "answer": "(3, 1)"},
        {"question": "Which keyword is used to make a class inherit another class?", "options": ["class Child(Parent)", "extends", "inherits", "None"], "answer": "class Child(Parent)"},
        {"question": "What is the output of: print(bool(''))?", "options": ["False", "True", "Error", "None"], "answer": "False"},
        {"question": "What is the output of: print({1, 2, 2, 3})?", "options": ["{1, 2, 3}", "{1, 2, 2, 3}", "Error", "None"], "answer": "{1, 2, 3}"},
        {"question": "What will the following code output: print('abcd'.find('c'))?", "options": ["2", "1", "-1", "Error"], "answer": "2"},
        {"question": "Which of the following is an immutable data type in Python?", "options": ["tuple", "list", "set", "dict"], "answer": "tuple"},
        {"question": "What does the 'is' keyword compare?", "options": ["Identity", "Value", "Type", "Length"], "answer": "Identity"},
        {"question": "What will the following code output: print(round(7.5))?", "options": ["8", "7", "7.5", "Error"], "answer": "8"},
        {"question": "Which function can be used to shuffle a list in Python?", "options": ["shuffle()", "random()", "randint()", "None"], "answer": "shuffle()"},
        {"question": "What does the itertools.permutations() function do?", "options": ["Generates permutations", "Generates combinations", "Sorts lists", "None"], "answer": "Generates permutations"},
        {"question": "What will the following code output: print(ord('A'))?", "options": ["65", "97", "66", "Error"], "answer": "65"},
        {"question": "Which operator is used for floor division?", "options": ["//", "/", "%", "None"], "answer": "//"},
        {"question": "What is the output of: print(list(reversed([1, 2, 3])))?", "options": ["[3, 2, 1]", "[1, 2, 3]", "[2, 3, 1]", "Error"], "answer": "[3, 2, 1]"},
        {"question": "Which function returns the ASCII character for an integer?", "options": ["chr()", "ord()", "ascii()", "None"], "answer": "chr()"},
        {"question": "What is the result of: print(type({}))?", "options": ["<class 'dict'>", "<class 'set'>", "<class 'list'>", "Error"], "answer": "<class 'dict'>"},
        {"question": "What is the output of: print([1, 2] * 2)?", "options": ["[1, 2, 1, 2]", "[1, 2]", "[2, 4]", "Error"], "answer": "[1, 2, 1, 2]"},
        {"question": "What will the following code output: print(len('Python'))?", "options": ["6", "5", "7", "Error"], "answer": "6"},
        {"question": "Which keyword is used to handle exceptions in Python?", "options": ["try", "catch", "handle", "None"], "answer": "try"},
        {"question": "What is the output of: print(sum([1, 2, 3]))?", "options": ["6", "5", "Error", "None"], "answer": "6"},
        {"question": "Which module is used to work with regular expressions in Python?", "options": ["re", "regex", "match", "None"], "answer": "re"},
        {"question": "What will the following code output: print(max([1, 5, 3]))?", "options": ["5", "3", "1", "Error"], "answer": "5"},
        {"question": "What is the output of: print(bin(10))?", "options": ["0b1010", "10", "0x10", "Error"], "answer": "0b1010"},
        {"question": "Which of the following is a Python keyword?", "options": ["lambda", "def", "global", "All of the above"], "answer": "All of the above"},
        {"question": "What will the following code output: print(str(123))?", "options": ["'123'", "123", "Error", "None"], "answer": "'123'"},
        {"question": "Which function can be used to read a line from a file?", "options": ["readline()", "readlines()", "read()", "None"], "answer": "readline()"},
        {"question": "What is the purpose of the id() function?", "options": ["Returns the memory address", "Returns the type", "Returns the value", "None"], "answer": "Returns the memory address"},
        {"question": "What is the output of: print(bool('False'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method is used to replace a substring in Python?", "options": ["replace()", "sub()", "update()", "None"], "answer": "replace()"},
        {"question": "What will the following code output: print(set([1, 2, 2, 3]))?", "options": ["{1, 2, 3}", "{1, 2, 2, 3}", "Error", "None"], "answer": "{1, 2, 3}"},
        {"question": "What is the result of: print(' '.isspace())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method is used to capitalize the first letter of a string?", "options": ["capitalize()", "title()", "upper()", "None"], "answer": "capitalize()"},
        {"question": "What will the following code output: print(5 in range(1, 6))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which module is used to generate random numbers?", "options": ["random", "math", "os", "None"], "answer": "random"},
        {"question": "What is the output of: print(3 ** 2)?", "options": ["9", "6", "8", "Error"], "answer": "9"},
        {"question": "What is the purpose of the continue statement in a loop?", "options": ["Skips the current iteration", "Terminates the loop", "Pauses the loop", "None"], "answer": "Skips the current iteration"},
        {"question": "Which function is used to get the length of a list?", "options": ["len()", "size()", "count()", "None"], "answer": "len()"},
        {"question": "What is the result of: print(abs(-10))?", "options": ["10", "-10", "Error", "None"], "answer": "10"},
        {"question": "Which method is used to check if all elements in an iterable are true?", "options": ["all()", "any()", "check()", "None"], "answer": "all()"},
        {"question": "What is the output of: print(10 % 3)?", "options": ["1", "3", "10", "Error"], "answer": "1"},
        {"question": "Which method can be used to convert a string to uppercase?", "options": ["upper()", "capitalize()", "lower()", "None"], "answer": "upper()"},
        {"question": "What will the following code output: print({i: i*2 for i in range(3)})?", "options": ["{0: 0, 1: 2, 2: 4}", "{0: 0, 1: 1, 2: 2}", "{1: 2, 2: 4, 3: 6}", "Error"], "answer": "{0: 0, 1: 2, 2: 4}"},
        {"question": "Which keyword is used to define an anonymous function?", "options": ["lambda", "def", "anonymous", "None"], "answer": "lambda"},
        {"question": "What is the output of: print([1, 2, 3] == [1, 2, 3])?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following functions can be used to get the first element of a list?", "options": ["first()", "head()", "list[0]", "None"], "answer": "list[0]"},
        {"question": "What is the result of: print('hello'.upper())?", "options": ["'HELLO'", "'hello'", "Error", "None"], "answer": "'HELLO'"},
        {"question": "Which function is used to sort a list in Python?", "options": ["sort()", "ordered()", "sorted()", "None"], "answer": "sort()"},
        {"question": "What will be the result of: print(len({1, 2, 3}))?", "options": ["3", "2", "1", "Error"], "answer": "3"},
        {"question": "Which method is used to remove an element from a set?", "options": ["remove()", "discard()", "pop()", "All of the above"], "answer": "All of the above"},
        {"question": "What does the 'continue' statement do in a loop?", "options": ["Terminates the loop", "Skips the current iteration", "Pauses the loop", "None of the above"], "answer": "Skips the current iteration"},
        {"question": "Which of the following is a built-in Python data type?", "options": ["set", "dict", "list", "All of the above"], "answer": "All of the above"},
        {"question": "What is the output of: print('Python'.lower())?", "options": ["'python'", "'Python'", "Error", "None"], "answer": "'python'"},
        {"question": "Which function is used to generate a random number between 0 and 1?", "options": ["rand()", "random()", "randint()", "random.random()"], "answer": "random.random()"},
        {"question": "What will the following code output: print(5 ** 2)?", "options": ["25", "5", "10", "Error"], "answer": "25"},
        {"question": "What is the result of: print(1 == 1.0)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which operator is used for exponentiation?", "options": ["^", "**", "//", "%"], "answer": "**"},
        {"question": "What is the output of: print(10 and 5)?", "options": ["5", "10", "True", "Error"], "answer": "5"},
        {"question": "What is the output of: print([1, 2] + [3, 4])?", "options": ["[1, 2, 3, 4]", "[4, 3, 2, 1]", "[1, 2, 3]", "Error"], "answer": "[1, 2, 3, 4]"},
        {"question": "Which function can be used to get the absolute value of a number?", "options": ["abs()", "value()", "absolute()", "None"], "answer": "abs()"},
        {"question": "What is the purpose of the 'assert' statement?", "options": ["Used for debugging", "Checks if a condition is true", "Executes code if true", "None"], "answer": "Checks if a condition is true"},
        {"question": "Which function is used to get the type of an object?", "options": ["type()", "object()", "class()", "None"], "answer": "type()"},
        {"question": "Which of the following is a method of the list object?", "options": ["add()", "insert()", "append()", "All of the above"], "answer": "append()"},
        {"question": "What is the result of: print('abc'.replace('b', 'z'))?", "options": ["'azc'", "'abc'", "'ac'", "Error"], "answer": "'azc'"},
        {"question": "Which function is used to combine two lists in Python?", "options": ["combine()", "merge()", "extend()", "append()"], "answer": "extend()"},
        {"question": "What will the following code output: print(len('Python' + ' Programming'))?", "options": ["18", "16", "14", "Error"], "answer": "18"},
        {"question": "Which function is used to count the occurrences of a substring in a string?", "options": ["count()", "find()", "index()", "None"], "answer": "count()"},
        {"question": "What is the output of: print('   hello   '.strip())?", "options": ["'hello'", "'hello   '", "'   hello'", "Error"], "answer": "'hello'"},
        {"question": "Which Python function can be used to get a random element from a list?", "options": ["random()", "randint()", "choice()", "random.choice()"], "answer": "random.choice()"},
        {"question": "Which function can be used to remove a key from a dictionary?", "options": ["delete()", "pop()", "remove()", "clear()"], "answer": "pop()"},
        {"question": "What will be the output of: print(2 ** 3 ** 2)?", "options": ["512", "64", "16", "Error"], "answer": "512"},
        {"question": "Which of the following methods can be used to add an element to a dictionary?", "options": ["add()", "append()", "insert()", "update()"], "answer": "update()"},
        {"question": "What is the result of: print('abc'.find('b'))?", "options": ["1", "-1", "0", "Error"], "answer": "1"},
        {"question": "What is the output of: print(list(range(1, 6)))?", "options": ["[1, 2, 3, 4, 5]", "[1, 2, 3, 4]", "[0, 1, 2, 3, 4]", "Error"], "answer": "[1, 2, 3, 4, 5]"},
        {"question": "Which of the following can be used to check if a key exists in a dictionary?", "options": ["in", "has_key()", "exists()", "None"], "answer": "in"},
        {"question": "What will the following code output: print('Hello' * 3)?", "options": ["HelloHelloHello", "Hello 3", "Error", "None"], "answer": "HelloHelloHello"},
        {"question": "What is the purpose of the 'else' clause in a loop?", "options": ["Executes when the loop finishes", "Executes when the loop starts", "Executes after an exception", "None"], "answer": "Executes when the loop finishes"},
        {"question": "Which function can be used to create a list from an iterable?", "options": ["list()", "array()", "to_list()", "None"], "answer": "list()"},
        {"question": "What is the result of: print('a' == 'A')?", "options": ["False", "True", "None", "Error"], "answer": "False"},
        {"question": "What will the following code output: print(10 / 2)?", "options": ["5", "2", "10", "Error"], "answer": "5"},
        {"question": "Which function is used to merge two dictionaries in Python?", "options": ["merge()", "combine()", "update()", "extend()"], "answer": "update()"},
        {"question": "Which of the following is used to create a new instance of a class in Python?", "options": ["new()", "class()", "constructor()", "None"], "answer": "None"},
        {"question": "What is the output of: print(0 == False)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is not a valid Python data type?", "options": ["int", "str", "float", "char"], "answer": "char"},
        {"question": "What is the result of: print(2 * 3 + 5)?", "options": ["11", "13", "9", "7"], "answer": "11"},
        {"question": "Which operator is used to concatenate two strings?", "options": ["&", "+", "=", "*"], "answer": "+"},
        {"question": "What is the output of: print('Python'.startswith('P'))?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is a Python keyword?", "options": ["null", "try", "none", "true"], "answer": "try"},
        {"question": "What is the purpose of the 'finally' clause in Python?", "options": ["It always executes after the try block", "It executes only if an exception is raised", "It executes if no exception is raised", "None"], "answer": "It always executes after the try block"},
        {"question": "What is the result of: print(10 % 3)?", "options": ["3", "1", "2", "None"], "answer": "1"},
        {"question": "Which method is used to convert a string to a list of characters?", "options": ["split()", "list()", "char()", "None"], "answer": "list()"},
        {"question": "What is the correct way to handle exceptions in Python?", "options": ["try-except", "catch-throw", "try-catch", "None"], "answer": "try-except"},
        {"question": "Which function is used to convert a string to lowercase?", "options": ["lower()", "convert()", "case()", "down()"], "answer": "lower()"},
        {"question": "What is the result of: print(len('hello world'))?", "options": ["11", "10", "12", "None"], "answer": "11"},
        {"question": "What will the following code output: print([2, 4, 6] * 2)?", "options": ["[2, 4, 6, 2, 4, 6]", "[4, 8, 12]", "[2, 4, 6]", "None"], "answer": "[2, 4, 6, 2, 4, 6]"},
        {"question": "Which Python function is used to check if a number is even?", "options": ["is_even()", "even()", "mod(2)", "None"], "answer": "None"},
        {"question": "What is the output of: print(3 * 2 ** 2)?", "options": ["12", "9", "16", "None"], "answer": "12"},
        {"question": "Which of the following is used to define a class in Python?", "options": ["class", "object", "def", "None"], "answer": "class"},
        {"question": "Which operator is used for floor division in Python?", "options": ["/", "//", "%", "div"], "answer": "//"},
        {"question": "Which of the following methods is used to add an element at the beginning of a list?", "options": ["insert()", "append()", "extend()", "None"], "answer": "insert()"},
        {"question": "What is the result of: print('123'.isdigit())?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which function can be used to convert a string to an integer?", "options": ["int()", "str()", "float()", "convert()"], "answer": "int()"},
        {"question": "What is the output of: print('ab' * 3)?", "options": ["'ababab'", "'ab'", "'aabbb'", "None"], "answer": "'ababab'"},
        {"question": "Which of the following can be used to iterate over a sequence in Python?", "options": ["for", "while", "both", "None"], "answer": "both"},
        {"question": "What is the purpose of the 'self' keyword in a Python class?", "options": ["Refers to the instance of the class", "Refers to the method", "Refers to the class itself", "None"], "answer": "Refers to the instance of the class"},
        {"question": "What is the output of: print(10 == 10.0)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which of the following is not a valid method of a string object?", "options": ["capitalize()", "replace()", "extend()", "split()"], "answer": "extend()"},
        {"question": "Which of the following is used to define a function in Python?", "options": ["def", "function", "func", "define"], "answer": "def"},
        {"question": "Which function is used to return the number of occurrences of a substring in a string?", "options": ["count()", "find()", "index()", "None"], "answer": "count()"},
        {"question": "What will the following code output: print('Hello'.find('e'))?", "options": ["1", "0", "-1", "Error"], "answer": "1"},
        {"question": "What is the result of: print('Python' == 'python')?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "Which of the following methods is used to remove an element from a list by value?", "options": ["remove()", "pop()", "delete()", "discard()"], "answer": "remove()"},
        {"question": "What will the following code output: print(list('hello'))?", "options": ["['h', 'e', 'l', 'l', 'o']", "'hello'", "['hello']", "Error"], "answer": "['h', 'e', 'l', 'l', 'o']"},
        {"question": "Which of the following can be used to create a tuple?", "options": ["[]", "{}", "()", "None"], "answer": "()"},
        {"question": "What will be the result of: print(1 < 2 < 3)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "What is the purpose of the 'pass' statement in Python?", "options": ["Skips the current iteration", "Terminates the loop", "Does nothing", "None"], "answer": "Does nothing"},
        {"question": "What will be the output of: print(bool('False'))?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "Which of the following is used to get the keys of a dictionary?", "options": ["keys()", "get()", "items()", "None"], "answer": "keys()"},
        {"question": "Which of the following is an immutable data type in Python?", "options": ["list", "string", "tuple", "All of the above"], "answer": "string"},
        {"question": "What is the output of: print(bool(0))?", "options": ["True", "False", "None", "Error"], "answer": "False"},
        {"question": "Which Python statement is used to terminate a loop?", "options": ["stop", "exit", "break", "return"], "answer": "break"},
        {"question": "Which of the following is used to remove leading whitespace in a string?", "options": ["strip()", "lstrip()", "rstrip()", "split()"], "answer": "lstrip()"},
        {"question": "What is the result of: print(5 / 2)?", "options": ["2", "2.5", "3", "2.0"], "answer": "2.5"},
        {"question": "Which of the following operators can be used to check equality?", "options": ["=", "==", "===","!="], "answer": "=="},
        {"question": "What is the output of: print('abc' * 0)?", "options": ["'abc'", "''", "'0abc'", "Error"], "answer": "''"},
        {"question": "Which of the following methods is used to join a list of strings?", "options": ["join()", "concat()", "combine()", "append()"], "answer": "join()"},
        {"question": "What does the 'is' operator check in Python?", "options": ["If two objects are the same type", "If two objects refer to the same object in memory", "If two objects are equal", "None of the above"], "answer": "If two objects refer to the same object in memory"},
        {"question": "What is the result of: print('python'.upper())?", "options": ["'python'", "'Python'", "'PYTHON'", "Error"], "answer": "'PYTHON'"},
        {"question": "Which of the following is not a valid way to define a function in Python?", "options": ["def my_func():", "function my_func():", "def my_func(param):", "def my_func(param=0):"], "answer": "function my_func():"},
        {"question": "What is the result of: print('hello'.replace('l', 'x'))?", "options": ["'hexxo'", "'hexlo'", "'hexxl'", "'hello'"], "answer": "'hexxo'"},
        {"question": "Which of the following will convert a list into a string?", "options": ["str()", "list()", "join()", "split()"], "answer": "join()"},
        {"question": "Which keyword is used to declare a constant in Python?", "options": ["const", "constant", "let", "None"], "answer": "None"},
        {"question": "What will the following code output: print([1, 2, 3] + [4, 5])?", "options": ["[1, 2, 3, 4, 5]", "[1, 2, 3, [4, 5]]", "[5, 4, 3, 2, 1]", "Error"], "answer": "[1, 2, 3, 4, 5]"},
        {"question": "Which Python data type is used to store key-value pairs?", "options": ["list", "tuple", "set", "dictionary"], "answer": "dictionary"},
        {"question": "Which function can be used to find the length of an object in Python?", "options": ["size()", "length()", "len()", "None"], "answer": "len()"},
        {"question": "What will the following code output: print(range(5))?", "options": ["range(5)", "0 1 2 3 4", "5", "[0, 1, 2, 3, 4]"], "answer": "range(5)"},
        {"question": "What does the 'continue' statement do in a loop?", "options": ["Terminates the loop", "Skips the current iteration", "Pauses the loop", "None of the above"], "answer": "Skips the current iteration"},
        {"question": "Which of the following is used to handle exceptions in Python?", "options": ["try-catch", "try-finally", "try-except", "catch-finally"], "answer": "try-except"},
        {"question": "What will be the output of: print(2 == 2.0)?", "options": ["True", "False", "Error", "None"], "answer": "True"},
        {"question": "Which method is used to remove all elements from a list?", "options": ["clear()", "remove()", "pop()", "delete()"], "answer": "clear()"},
        {"question": "Which Python module is used for working with regular expressions?", "options": ["re", "regex", "re.compile", "None"], "answer": "re"},
        {"question": "What is the correct way to create a new set in Python?", "options": ["[]", "{}", "()", "set()"], "answer": "set()"},
        {"question": "Which operator is used for exponentiation in Python?", "options": ["^", "**", "*", "//"], "answer": "**"},
        {"question": "Which of the following is a valid dictionary in Python?", "options": ["{1, 2, 3}", "[1, 2, 3]", "{'key': 'value'}", "None"], "answer": "{'key': 'value'}"},
        {"question": "What is the result of: print(1 != 2)?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "Which of the following methods is used to sort a list in place?", "options": ["sort()", "sorted()", "order()", "None"], "answer": "sort()"},
        {"question": "What is the output of: print('10'.isdigit())?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "What is the purpose of the 'super()' function in Python?", "options": ["It calls a method from the parent class", "It creates a new object", "It initializes the class", "None"], "answer": "It calls a method from the parent class"},
        {"question": "What is the result of: print(4 ** 0.5)?", "options": ["2", "4", "16", "None"], "answer": "2"},
        {"question": "What is the correct way to get the last element from a list?", "options": ["list[-1]", "list(0)", "list[last]", "list[0]"], "answer": "list[-1]"},
        {"question": "What is the result of: print('abc'.find('b'))?", "options": ["1", "0", "-1", "None"], "answer": "1"},
        {"question": "What is the purpose of the 'global' keyword in Python?", "options": ["It defines a variable at the global level", "It makes a local variable global", "It refers to the global object", "None"], "answer": "It makes a local variable global"},
        {"question": "Which of the following is not a valid way to handle exceptions?", "options": ["try-except", "try-catch", "try-finally", "try-else"], "answer": "try-catch"},
        {"question": "What is the correct syntax for defining a lambda function?", "options": ["lambda x: x + 1", "function(x): x + 1", "def lambda x: x + 1", "None"], "answer": "lambda x: x + 1"},
        {"question": "Which of the following methods is used to split a string into a list of substrings?", "options": ["split()", "slice()", "divide()", "None"], "answer": "split()"},
        {"question": "What will the following code output: print([1, 2, 3] == [1, 2, 3])?", "options": ["True", "False", "None", "Error"], "answer": "True"},
        {"question": "Which function is used to create an iterator from an iterable?", "options": ["iter()", "list()", "next()", "iterator()"], "answer": "iter()"},
        {"question": "Why is Python considered an interpreted language?", "options": ["Because it is compiled to bytecode", "Because the code is executed line by line", "Because it uses a JIT compiler", "None"], "answer": "Because the code is executed line by line"},
        {"question": "Why does Python use indentation instead of braces for code blocks?", "options": ["To make the code more readable", "To save memory", "To improve performance", "None of the above"], "answer": "To make the code more readable"},
        {"question": "Why do we use 'self' in Python class methods?", "options": ["To refer to the class itself", "To refer to an instance of the class", "It is just a convention", "None of the above"], "answer": "To refer to an instance of the class"},
        {"question": "Why is Python known as a dynamically typed language?", "options": ["Because the type of a variable is defined at runtime", "Because Python does not support types", "Because the type of a variable is explicitly declared", "None of the above"], "answer": "Because the type of a variable is defined at runtime"},
        {"question": "Why is Python not strictly object-oriented?", "options": ["Because it supports multiple programming paradigms", "Because Python does not support classes", "Because Python only uses functions", "None"], "answer": "Because it supports multiple programming paradigms"},
        {"question": "Why is the 'with' statement used in Python?", "options": ["To handle exceptions", "To manage resources like files", "To define variables", "None"], "answer": "To manage resources like files"},
        {"question": "Why would you use the 'lambda' function in Python?", "options": ["For creating anonymous functions", "For defining larger functions", "For enhancing performance", "None"], "answer": "For creating anonymous functions"},
        {"question": "Why do we use decorators in Python?", "options": ["To modify the behavior of functions or methods", "To improve performance", "To simplify code", "None"], "answer": "To modify the behavior of functions or methods"},
        {"question": "Why are Python's lists considered dynamic?", "options": ["Because their size can change at runtime", "Because they support different data types", "Because they have a fixed size", "None of the above"], "answer": "Because their size can change at runtime"},
        {"question": "Why is the 'global' keyword used in Python?", "options": ["To create global variables", "To access a global variable inside a function", "To access local variables globally", "None"], "answer": "To access a global variable inside a function"},
        {"question": "Why are Python tuples immutable?", "options": ["Because they are optimized for memory", "To prevent accidental changes to data", "Because Python does not support mutability", "None"], "answer": "To prevent accidental changes to data"},
        {"question": "Why is Python often preferred for data analysis?", "options": ["It has a large selection of libraries for data manipulation", "It is the fastest programming language", "Because it is the easiest to learn", "None"], "answer": "It has a large selection of libraries for data manipulation"},
        {"question": "Why do you need to import modules in Python?", "options": ["To use functions and variables defined in external files", "To increase the performance of your program", "To organize your code", "None"], "answer": "To use functions and variables defined in external files"},
        {"question": "Why is Python considered a high-level programming language?", "options": ["Because it is close to machine language", "Because it abstracts away the hardware and focuses on human-readable code", "Because it is slower than low-level languages", "None"], "answer": "Because it abstracts away the hardware and focuses on human-readable code"},
        {"question": "Why does Python use the 'is' operator instead of '==' in certain cases?", "options": ["To compare object identity", "To compare the values of two variables", "To check if two variables are equal", "None"], "answer": "To compare object identity"},
        {"question": "Why is it important to manage memory efficiently in Python?", "options": ["To prevent memory leaks", "To optimize performance", "To reduce processing time", "All of the above"], "answer": "All of the above"},
        {"question": "Why does Python use the concept of namespaces?", "options": ["To store and manage variable names in different contexts", "To prevent naming conflicts", "To improve performance", "All of the above"], "answer": "All of the above"},
        {"question": "Why is 'None' used in Python?", "options": ["To represent a null value", "To represent an undefined value", "To represent a boolean false value", "None"], "answer": "To represent a null value"},
        {"question": "Why is the 'yield' keyword used in Python?", "options": ["To return a value from a function and pause execution", "To create a generator function", "To define a constant", "None"], "answer": "To return a value from a function and pause execution"},
        {"question": "Why do Python developers use virtual environments?", "options": ["To isolate dependencies for different projects", "To improve code readability", "To optimize performance", "None"], "answer": "To isolate dependencies for different projects"},
        {"question": "Why does Python use the GIL (Global Interpreter Lock)?", "options": ["To ensure thread safety in CPython", "To improve performance in multithreaded programs", "To prevent memory leaks", "None"], "answer": "To ensure thread safety in CPython"},
        {"question": "Why does Python support multiple inheritance?", "options": ["To provide flexibility in object-oriented programming", "To increase complexity", "To improve performance", "None"], "answer": "To provide flexibility in object-oriented programming"},
        {"question": "Why does Python use garbage collection?", "options": ["To manage memory automatically by reclaiming unused memory", "To optimize CPU usage", "To improve the speed of the interpreter", "None"], "answer": "To manage memory automatically by reclaiming unused memory"},
    ]
    for q in question_data:
        question = Question(question=q['question'], options=q['options'], answer=q['answer'])
        db.session.add(question)
    db.session.commit()

# Routes
@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        session['name'] = request.form['name']
        if session['name'].lower() == 'test':
        	session['totalQuestions'] = 3
        else:
        	session['totalQuestions'] = 200
        session['answered'] = 0
        print (Question.query.all())
        session['question_ids'] = random.sample([q.id for q in Question.query.all()], session['totalQuestions'])
        session['session_id'] = str(uuid.uuid4())  # Generate a unique session ID
        return redirect(url_for('questionnaire'))
    return render_template('index.html')

@app.route('/questionnaire', methods=['GET', 'POST'])
def questionnaire():
    if 'question_ids' not in session or session['answered'] >= session['totalQuestions']:
        return redirect(url_for('result'))

    current_question_id = session['question_ids'][session['answered']]
    question = Question.query.get(current_question_id)

    if request.method == 'POST':
        selected_option = request.form.get('answer', None)
        user_answer = UserAnswer(session_id=session['session_id'], question_id=current_question_id, selected_option=selected_option)
        db.session.add(user_answer)
        db.session.commit()
        session['answered'] += 1

        if session['answered'] >= session['totalQuestions']:
            return redirect(url_for('result'))

        return redirect(url_for('questionnaire'))

    return render_template('questionnaire.html', question=question)

@app.route('/result')
def result():
    user_answers = UserAnswer.query.filter_by(session_id=session['session_id']).all()
    correct_answers = 0

    for user_answer in user_answers:
        question = Question.query.get(user_answer.question_id)
        if user_answer.selected_option == question.answer:
            correct_answers += 1

    percentage = round((correct_answers / session['totalQuestions']) * 100, 1)
    color = get_color(percentage)

    return render_template('result.html', name=session['name'], score=percentage, color=color)

def get_color(percentage):
    if percentage >= 90:
        return 'goldenrod'
    elif percentage >= 60:
        return 'green'
    elif percentage >= 40:
        return 'darkorange'
    else:
        return 'darkred'

if __name__ == '__main__':
    initialize_db()  # Ensure database is initialized with application context
    app.run(debug=True)